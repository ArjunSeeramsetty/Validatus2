# ==============================================================================
# Multi-stage Dockerfile for Production GCP Deployment
# Optimized for faster builds and smaller final image
# ==============================================================================

# Stage 1: Base Python with system dependencies
FROM python:3.11-slim as base
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libpq5 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Stage 2: Build environment with all build dependencies
FROM python:3.11-slim as builder
ENV PYTHONUNBUFFERED=1

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip
RUN pip install --no-cache-dir --upgrade pip==24.2

# Copy requirements
COPY requirements-production.txt /tmp/requirements-production.txt

# Install Python dependencies in stages for better caching
# Stage 2a: Core dependencies first
RUN pip install --no-cache-dir \
    protobuf==4.25.8 \
    google-auth==2.35.0 \
    google-api-core[grpc]==2.25.2 \
    googleapis-common-protos==1.65.0 \
    grpcio==1.66.2 \
    grpcio-status==1.62.3

# Stage 2b: FastAPI and web dependencies
RUN pip install --no-cache-dir \
    FastAPI==0.118.0 \
    "uvicorn[standard]==0.37.0" \
    pydantic==2.9.2 \
    pydantic-settings==2.1.0

# Stage 2c: Database dependencies
RUN pip install --no-cache-dir \
    asyncpg==0.29.0 \
    redis==5.0.1 \
    sqlalchemy==2.0.23

# Stage 2d: Google Cloud services (lightweight versions)
RUN pip install --no-cache-dir \
    google-cloud-storage==2.18.0 \
    google-cloud-secret-manager==2.16.4 \
    google-cloud-firestore==2.13.1 \
    google-cloud-logging==3.12.1

# Stage 2e: Utility packages
RUN pip install --no-cache-dir \
    httpx==0.28.1 \
    requests==2.31.0 \
    python-dotenv==1.1.1 \
    beautifulsoup4==4.12.2

# Stage 3: Production runtime
FROM base as production

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create app directory
WORKDIR /app

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash validatus && \
    chown -R validatus:validatus /app
USER validatus

# Copy application code
COPY --chown=validatus:validatus . .

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Use exec form and fixed port for Cloud Run
CMD ["uvicorn", "app.main_gcp:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
