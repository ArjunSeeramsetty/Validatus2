# Multi-stage build for production GCP deployment
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc g++ libpq-dev curl build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements
COPY requirements-gcp.txt .
RUN pip install --no-cache-dir --upgrade pip==25.2 && \
    pip install --no-cache-dir -r requirements-gcp.txt

# Production stage
FROM python:3.11-slim

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 curl \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy application code
COPY . .

# Create non-root user
RUN useradd --create-home --shell /bin/bash validatus
USER validatus

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Expose port (Cloud Run will set PORT environment variable)
EXPOSE 8000

# Start command - Use PORT from environment, fallback to 8000
CMD ["sh", "-c", "uvicorn app.main_production:app --host 0.0.0.0 --port ${PORT:-8000}"]