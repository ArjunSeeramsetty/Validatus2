steps:
  # Step 1: Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-f', 'Dockerfile',
      '-t', 'gcr.io/$PROJECT_ID/validatus-backend:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/validatus-backend:latest',
      '.'
    ]
    timeout: '1200s'

  # Step 2: Push the container images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/validatus-backend:$BUILD_ID']
    timeout: '300s'
    
  - name: 'gcr.io/cloud-builders/docker' 
    args: ['push', 'gcr.io/$PROJECT_ID/validatus-backend:latest']
    timeout: '300s'

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'validatus-backend'
    - '--image'
    - 'gcr.io/$PROJECT_ID/validatus-backend:$BUILD_ID'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--service-account'
    - 'validatus-run@$PROJECT_ID.iam.gserviceaccount.com'
    - '--set-env-vars'
    - 'GCP_PROJECT_ID=$PROJECT_ID,ENVIRONMENT=production,CLOUD_SQL_CONNECTION_NAME=$PROJECT_ID:us-central1:validatus-sql,CLOUD_SQL_DATABASE=validatus,CLOUD_SQL_USER=validatus_app,CLOUD_SQL_PASSWORD=Validatus2024!'
    - '--add-cloudsql-instances'
    - '$PROJECT_ID:us-central1:validatus-sql'
    - '--memory'
    - '2Gi'
    - '--cpu'
    - '2'
    - '--max-instances'
    - '10'
    - '--timeout'
    - '900'
    - '--port'
    - '8000'
    timeout: '600s'

images:
- 'gcr.io/$PROJECT_ID/validatus-backend:$BUILD_ID'
- 'gcr.io/$PROJECT_ID/validatus-backend:latest'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  
timeout: '3600s'